8-bit instructions:

ADDIU Y
ADDU Y
ANDI Y
LUI Y
ORI Y
MULTU Y
MFHI Y
MFLO Y
XOR Y
SRL Y
ST
LD 
BEZ 
SLT 
JMP

--------------------------------------

I-Type:
	op, Rx, imm

R-Type:
	op, Rx, Ry

Only use 2's complement when imm is
4 bits or greater

--------------------------------------

LUI (I)

0000xxii

rx = imm
lui $rx, imm

op = [0:4]
Rx = [4:6]
imm = [6:]

-----------------------------------

ORI (I)

0001xxii
rx = rx | imm
ori $x, imm

op = [0:4]
rx = [4:6]
imm = [6:]

----------------------------------

ADDIU (I)

0010xxii

rx = rx + imm
addiu $x, imm

op = [0:4]
rx = [4:6]
imm = [6:]

---------------------------------

MULTU (R)

0011xxyy

$LO = $x * $y
mult $x, $y

op = [0:4]
rx = [4:6]
ry = [6:]

------------------------------------

MFHI(?)

010011xx
rx = $HI
mfhi $x

op = [0:6]
rx= [6:]

------------------------------------

MFLO (?)

010111xx

rx = $LO
mflo $x

op = [0:6]
rx = [6:]

-------------------------------------

XOR (R)

0110xxyy

rx = rx ^ ry
xor $x, $y

op = [0:4]
rx = [4:6]
ry= [6:]

------------------------------------

SRL (I)

0111xxii

rx = rx >> imm
srl $x, imm

op = [0:4]
rx = [4:6]
imm = [6:]

-------------------------------------

ADDU (R)

1000xxyy

rx = rx + ry
addu $x, $y

op = [0:4]
rx = [4:6]
ry = [6:]

-------------------------------------

ANDI (I)

1001xxii

rx = rx & imm
andi $x, imm

op = [0:4]
rx = [4:6]
imm = [6:]

-------------------------------------

ST (Formerly SB) [R]

1010xxyy

mem[ry] = rx
st $x, $y

op = [0:4]
rx = [4:6]
ry = [6:]

-------------------------------------

LD (formerly LBU) [R]

1011xxyy

rx = mem[ry]
ld $x, $y

op = [0:4]
rx = [4:6]
ry = [6:]

-------------------------------------

BEZ (formerly BNE, now equal 0) [?]

1100iiii

if R0 == 0, PC = PC + imm, else PC++
bez imm

op = [0:4]
imm = [4:]

--------------------------------------

SLT [R]

1101xxyy

R0 = 1 if Rx < Ry, R0 = 0 otherwise
slt $x, $y

op = [0:4]
Rx = [4:6]
Ry = [6:]

--------------------------------------

JMP [?]

1110iiii

PC = PC + imm
jmp imm

op = [0:4]
imm = [4:]

--------------------------------------
